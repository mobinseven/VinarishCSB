@page "/blazor_middlware_audit"
@attribute [Authorize]
@inject HttpClient Http
@inject IMatToaster matToaster

@if (apiLogItems == null)
{
    <LoadingBackground ShowLogoBox="true">
    </LoadingBackground>
}
else
{
    <h1>گزارش سامانه</h1>
    <p>
        در این بخش گزارش داد و ستدهای  کاربران با سامانه نمایش داده شده است.
    </p>
    <MatTable Items="@apiLogItems" Class="mat-elevation-z5" Striped="true" PageSize="10">
        <MatTableHeader>
            <th><div style="width:175px;">Date / Time</div></th>
            <th><div style="width:175px;">UserId</div></th>
            <th>Path</th>
            <th>Method</th>
            <th>Content</th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.RequestTime</td>
            <td>@context.UserName</td>
            <td>@context.Path</td>
            <td>@context.Method</td>
            <td>
                @if (context.Method != "GET")
                    {
                    <span> @context.ResponseBody</span>
                    }
                /**/
                /**/
                /**/
                /**/
            </td>
        </MatTableRow>
    </MatTable>
}

@code {
    List<ApiLogItemDto> apiLogItems;

    protected override async Task OnInitializedAsync()
    {
        ApiResponseDto apiResponse = await Http.GetJsonAsync<ApiResponseDto>("api/apilog");

        if (apiResponse.StatusCode == 200)
        {
            apiLogItems = Newtonsoft.Json.JsonConvert.DeserializeObject<ApiLogItemDto[]>(apiResponse.Result.ToString()).ToList<ApiLogItemDto>();
            apiLogItems.Sort((x, y) => -x.RequestTime.CompareTo(y.RequestTime));
        }
        else
        {
            matToaster.Add(apiResponse.Message, MatToastType.Danger, "Api Log Items Retrieval Failed");
        }
    }
}