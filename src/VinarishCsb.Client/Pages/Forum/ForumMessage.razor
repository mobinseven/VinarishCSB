@using Microsoft.AspNetCore.Components.Forms

@if (messageDto.Incoming)
{
    <div class="msg">
        <div class="received_msg">
            <span class="time_date" style="text-align: left;">@messageDto.UserName</span>
            <p>
                @messageDto.Text
            </p>
            <span class="time_date">
                @pc.GetHour(MessageDate):@pc.GetMinute(MessageDate)    |   @pc.GetDayOfMonth(MessageDate)/@pc.GetMonth(MessageDate)/@pc.GetYear(MessageDate)
            </span>
        </div>
    </div>
}
else
{
    <div class="msg">
        <div class="outgoing_msg">
            <p>
                @messageDto.Text
            </p>
            <span class="time_date">
                @pc.GetHour(MessageDate):@pc.GetMinute(MessageDate)    |   @pc.GetDayOfMonth(MessageDate)/@pc.GetMonth(MessageDate)/@pc.GetYear(MessageDate)
            </span>
        </div>
    </div>
}

@*<EditForm Model="@messageDto" OnValidSubmit="@DeleteMessage">
        <MatListItem Class="@messageDto.CSS">
            <MatListItemText Style="width: 100%;">
                <MatListItemPrimaryText>
                    @messageDto.Text
                </MatListItemPrimaryText>
                <MatListItemSecondaryText>
                    در @ از @messageDto.UserName
                </MatListItemSecondaryText>
            </MatListItemText>
            <MatIconButton Icon="delete"
                           Type="submit"
                           Style="float: right;">
            </MatIconButton>
        </MatListItem>
        <MatListDivider></MatListDivider>
    </EditForm>*@

@code
{
    MessageDto messageDto { get; set; }
    DateTime MessageDate;
    [Parameter]
    public Func<MessageDto, Task> Delete { get; set; }

    [Parameter]
    public MessageDto message { get; set; }

    protected override void OnParametersSet()
    {
        messageDto = message;
        MessageDate = messageDto.When.ToLocalTime();
    }
    PersianCalendar pc = new PersianCalendar();

    async Task DeleteMessage()
    {
        await Delete(messageDto);
    }
}