@page "/Departments"

@inject HttpClient Http
@inject IMatToaster matToaster

<h1>Departments</h1>
<p>
    Manage Departments.
    <span>@apiResponses</span>
</p>
@if (apiResponses == null)
{
    <LoadingBackground ShowLogoBox="true">
        <label>Loading Api Data</label>
    </LoadingBackground>
}
else
{
    <MatTable Items="@apiItems" Class="mat-elevation-z5" Striped="true" PageSize="10">
        <MatTableHeader>
            <th>Name</th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Name</td>
        </MatTableRow>
    </MatTable>
}


@code {
    string apiResponses;

    List<Department> apiItems = new List<Department>();

    protected override async Task OnInitializedAsync()
    {
        // discover endpoints from metadata
        var client = new HttpClient();

        var disco = await client.GetDiscoveryDocumentAsync("http://localhost:53414/");
        if (disco.IsError)
        {
            Console.WriteLine(disco.Error);
            return;
        }

        // request token
        var tokenResponse = await client.RequestClientCredentialsTokenAsync(new ClientCredentialsTokenRequest
        {
            Address = disco.TokenEndpoint,
            ClientId = "VinarishApiClient",
            ClientSecret = "SecretVinarishApi",

            Scope = "VinarishApi"
        });

        if (tokenResponse.IsError)
        {
            Console.WriteLine(tokenResponse.Error);
            return;
        }

        Console.WriteLine(tokenResponse.Json);
        Console.WriteLine("\n\n");

        // call api
        var apiClient = new HttpClient();
        apiClient.SetBearerToken(tokenResponse.AccessToken);

        var response = await apiClient.GetAsync("https://localhost:44377/api/Departments");
        if (!response.IsSuccessStatusCode)
        {
            Console.WriteLine(response.StatusCode);
        }
        else
        {
            var content = await response.Content.ReadAsStringAsync();
            apiResponses=content;
            apiItems = Newtonsoft.Json.JsonConvert.DeserializeObject<Department[]>(apiResponses).ToList<Department>();

        }
    }
}
